services:
  - docker

language: shell

stages:
  - build
  - name: deploy
    if: branch = master AND type != pull_request
  - name: deploy_dev
    if: branch = dev AND type != pull_request
  - name: deploy_tag
    if: tag =~ ^v AND type != pull_request

jobs:
  include:
    - stage: build
    - script:
        - docker build -t terminusdb/terminus-server:latest .
        - docker run -it --rm terminusdb/terminus-server:latest bash -c "/app/terminusdb/utils/db_util -k root -s localhost && swipl -g run_tests -g halt /app/terminusdb/start.pl"

    - stage: deploy
      script:
        - docker build -t terminusdb/terminus-server:latest .
        - docker run -it terminusdb/terminus-server bash -c "/app/terminusdb/utils/db_util -k root -s localhost && swipl -g run_tests -g halt /app/terminusdb/start.pl"
        - echo "$DOCKER_PASS" | docker login -u terminusdb --password-stdin
        - docker push terminusdb/terminus-server:latest

    - stage: deploy_dev
      script:
        - docker build -t terminusdb/terminus-server:dev .
        - docker run -it terminusdb/terminus-server:dev bash -c "/app/terminusdb/utils/db_util -k root -s localhost && swipl -g run_tests -g halt /app/terminusdb/start.pl"
        - echo "$DOCKER_PASS" | docker login -u terminusdb --password-stdin
        - docker push terminusdb/terminus-server:dev

    - stage: deploy_tag
      script:
        - docker build -t "terminusdb/terminus-server:$TRAVIS_TAG" .
        - docker run -it "terminusdb/terminus-server:$TRAVIS_TAG" bash -c "/app/terminusdb/utils/db_util -k root -s localhost && swipl -g run_tests -g halt /app/terminusdb/start.pl"
        - echo "$DOCKER_PASS" | docker login -u terminusdb --password-stdin
        - docker push "terminusdb/terminus-server:$TRAVIS_TAG"


notifications:
  slack:
    rooms:
      secure: e4XmpdD92Qcm7OoixU34tCsq93GCqiZ7PFpiZ84lgeEdrsnIgJFL14krS6iCXzf7Pl35/GGZ6jmTQ2aOOjr7Y2BLP7v0xjzZirWGAhMve8APMDKGX3z989yeJQwZv1jikiaATSbxbBqUSDyX4dN6Xxu7dguwZKiaZk0Ay4tPbSYLoUPZSS2p7qdtJ8SFk2o7G3ipNJj2T5Sn5sNoIf3Cd+jNBSLHi6XHVBoL+Ty7EwNmgyoXcZgweYEL6aC4uagVyGy1AO/GqOFxn8IznBTvvSm9h7QPQyzSJokGYeKfG6AHVpTNzmw1EkQYIODGBGTk/cVdTcyDov5RFaVpK0jmbsp92ei9uIFc/nRn02I3qMDwyMGCNS6M2Kcd43a4IByb7ymfq+jj+r+zHOxF14o0zRH3v9Bc2HZEY4ollKd7slNRJsPGPDy4ufWZspSfp3BW330GnFX+Whr9BXoErAYAwgN1vU3fYf6ZRYtS8zsWUeDCOFrmZ6iHac3UU3PRvR/6x56S5Vbiv8L5kEY6V0AtwqvZiqpWoYNSwbtixRStSLyw4ARpFDoYjdqqAsdiVqZAzmH9MMu0h2XY+uryH7brZJqblUcNo/UeWfaARkPQEQu7tzyo8cpbORL3NYBgb914mgFgNmwMXe1n/OX40DxNRQ3aTpMru+CE1p37RonYDlA=
